{
  "version": 3,
  "sources": ["../../../../../../../../../node_modules/next/dist/compiled/@edge-runtime/cookies/index.js", "../../../../../../../../../node_modules/next/src/server/web/spec-extension/cookies.ts", "../../../../../../../../../node_modules/next/src/server/app-render/async-local-storage.ts", "../../../../../../../../../node_modules/next/src/server/app-render/work-async-storage-instance.ts", "../../../../../../../../../node_modules/next/src/server/app-render/work-async-storage.external.ts", "../../../../../../../../../node_modules/next/src/server/app-render/work-unit-async-storage-instance.ts", "../../../../../../../../../node_modules/next/src/server/app-render/work-unit-async-storage.external.ts", "../../../../../../../../../node_modules/next/src/client/components/hooks-server-context.ts", "../../../../../../../../../node_modules/next/src/client/components/static-generation-bailout.ts", "../../../../../../../../../node_modules/next/src/server/dynamic-rendering-utils.ts", "../../../../../../../../../node_modules/next/src/lib/metadata/metadata-constants.tsx", "../../../../../../../../../node_modules/next/src/server/app-render/dynamic-rendering.ts", "../../../../../../../../../node_modules/next/src/server/app-render/after-task-async-storage-instance.ts", "../../../../../../../../../node_modules/next/src/server/app-render/after-task-async-storage.external.ts", "../../../../../../../../../node_modules/next/src/server/request/utils.ts", "../../../../../../../../../node_modules/next/src/server/web/spec-extension/adapters/reflect.ts"],
  "sourcesContent": ["\"use strict\";\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// src/index.ts\nvar src_exports = {};\n__export(src_exports, {\n  RequestCookies: () => RequestCookies,\n  ResponseCookies: () => ResponseCookies,\n  parseCookie: () => parseCookie,\n  parseSetCookie: () => parseSetCookie,\n  stringifyCookie: () => stringifyCookie\n});\nmodule.exports = __toCommonJS(src_exports);\n\n// src/serialize.ts\nfunction stringifyCookie(c) {\n  var _a;\n  const attrs = [\n    \"path\" in c && c.path && `Path=${c.path}`,\n    \"expires\" in c && (c.expires || c.expires === 0) && `Expires=${(typeof c.expires === \"number\" ? new Date(c.expires) : c.expires).toUTCString()}`,\n    \"maxAge\" in c && typeof c.maxAge === \"number\" && `Max-Age=${c.maxAge}`,\n    \"domain\" in c && c.domain && `Domain=${c.domain}`,\n    \"secure\" in c && c.secure && \"Secure\",\n    \"httpOnly\" in c && c.httpOnly && \"HttpOnly\",\n    \"sameSite\" in c && c.sameSite && `SameSite=${c.sameSite}`,\n    \"partitioned\" in c && c.partitioned && \"Partitioned\",\n    \"priority\" in c && c.priority && `Priority=${c.priority}`\n  ].filter(Boolean);\n  const stringified = `${c.name}=${encodeURIComponent((_a = c.value) != null ? _a : \"\")}`;\n  return attrs.length === 0 ? stringified : `${stringified}; ${attrs.join(\"; \")}`;\n}\nfunction parseCookie(cookie) {\n  const map = /* @__PURE__ */ new Map();\n  for (const pair of cookie.split(/; */)) {\n    if (!pair)\n      continue;\n    const splitAt = pair.indexOf(\"=\");\n    if (splitAt === -1) {\n      map.set(pair, \"true\");\n      continue;\n    }\n    const [key, value] = [pair.slice(0, splitAt), pair.slice(splitAt + 1)];\n    try {\n      map.set(key, decodeURIComponent(value != null ? value : \"true\"));\n    } catch {\n    }\n  }\n  return map;\n}\nfunction parseSetCookie(setCookie) {\n  if (!setCookie) {\n    return void 0;\n  }\n  const [[name, value], ...attributes] = parseCookie(setCookie);\n  const {\n    domain,\n    expires,\n    httponly,\n    maxage,\n    path,\n    samesite,\n    secure,\n    partitioned,\n    priority\n  } = Object.fromEntries(\n    attributes.map(([key, value2]) => [\n      key.toLowerCase().replace(/-/g, \"\"),\n      value2\n    ])\n  );\n  const cookie = {\n    name,\n    value: decodeURIComponent(value),\n    domain,\n    ...expires && { expires: new Date(expires) },\n    ...httponly && { httpOnly: true },\n    ...typeof maxage === \"string\" && { maxAge: Number(maxage) },\n    path,\n    ...samesite && { sameSite: parseSameSite(samesite) },\n    ...secure && { secure: true },\n    ...priority && { priority: parsePriority(priority) },\n    ...partitioned && { partitioned: true }\n  };\n  return compact(cookie);\n}\nfunction compact(t) {\n  const newT = {};\n  for (const key in t) {\n    if (t[key]) {\n      newT[key] = t[key];\n    }\n  }\n  return newT;\n}\nvar SAME_SITE = [\"strict\", \"lax\", \"none\"];\nfunction parseSameSite(string) {\n  string = string.toLowerCase();\n  return SAME_SITE.includes(string) ? string : void 0;\n}\nvar PRIORITY = [\"low\", \"medium\", \"high\"];\nfunction parsePriority(string) {\n  string = string.toLowerCase();\n  return PRIORITY.includes(string) ? string : void 0;\n}\nfunction splitCookiesString(cookiesString) {\n  if (!cookiesString)\n    return [];\n  var cookiesStrings = [];\n  var pos = 0;\n  var start;\n  var ch;\n  var lastComma;\n  var nextStart;\n  var cookiesSeparatorFound;\n  function skipWhitespace() {\n    while (pos < cookiesString.length && /\\s/.test(cookiesString.charAt(pos))) {\n      pos += 1;\n    }\n    return pos < cookiesString.length;\n  }\n  function notSpecialChar() {\n    ch = cookiesString.charAt(pos);\n    return ch !== \"=\" && ch !== \";\" && ch !== \",\";\n  }\n  while (pos < cookiesString.length) {\n    start = pos;\n    cookiesSeparatorFound = false;\n    while (skipWhitespace()) {\n      ch = cookiesString.charAt(pos);\n      if (ch === \",\") {\n        lastComma = pos;\n        pos += 1;\n        skipWhitespace();\n        nextStart = pos;\n        while (pos < cookiesString.length && notSpecialChar()) {\n          pos += 1;\n        }\n        if (pos < cookiesString.length && cookiesString.charAt(pos) === \"=\") {\n          cookiesSeparatorFound = true;\n          pos = nextStart;\n          cookiesStrings.push(cookiesString.substring(start, lastComma));\n          start = pos;\n        } else {\n          pos = lastComma + 1;\n        }\n      } else {\n        pos += 1;\n      }\n    }\n    if (!cookiesSeparatorFound || pos >= cookiesString.length) {\n      cookiesStrings.push(cookiesString.substring(start, cookiesString.length));\n    }\n  }\n  return cookiesStrings;\n}\n\n// src/request-cookies.ts\nvar RequestCookies = class {\n  constructor(requestHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    this._headers = requestHeaders;\n    const header = requestHeaders.get(\"cookie\");\n    if (header) {\n      const parsed = parseCookie(header);\n      for (const [name, value] of parsed) {\n        this._parsed.set(name, { name, value });\n      }\n    }\n  }\n  [Symbol.iterator]() {\n    return this._parsed[Symbol.iterator]();\n  }\n  /**\n   * The amount of cookies received from the client\n   */\n  get size() {\n    return this._parsed.size;\n  }\n  get(...args) {\n    const name = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(name);\n  }\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed);\n    if (!args.length) {\n      return all.map(([_, value]) => value);\n    }\n    const name = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter(([n]) => n === name).map(([_, value]) => value);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  set(...args) {\n    const [name, value] = args.length === 1 ? [args[0].name, args[0].value] : args;\n    const map = this._parsed;\n    map.set(name, { name, value });\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value2]) => stringifyCookie(value2)).join(\"; \")\n    );\n    return this;\n  }\n  /**\n   * Delete the cookies matching the passed name or names in the request.\n   */\n  delete(names) {\n    const map = this._parsed;\n    const result = !Array.isArray(names) ? map.delete(names) : names.map((name) => map.delete(name));\n    this._headers.set(\n      \"cookie\",\n      Array.from(map).map(([_, value]) => stringifyCookie(value)).join(\"; \")\n    );\n    return result;\n  }\n  /**\n   * Delete all the cookies in the cookies in the request.\n   */\n  clear() {\n    this.delete(Array.from(this._parsed.keys()));\n    return this;\n  }\n  /**\n   * Format the cookies in the request as a string for logging\n   */\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `RequestCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map((v) => `${v.name}=${encodeURIComponent(v.value)}`).join(\"; \");\n  }\n};\n\n// src/response-cookies.ts\nvar ResponseCookies = class {\n  constructor(responseHeaders) {\n    /** @internal */\n    this._parsed = /* @__PURE__ */ new Map();\n    var _a, _b, _c;\n    this._headers = responseHeaders;\n    const setCookie = (_c = (_b = (_a = responseHeaders.getSetCookie) == null ? void 0 : _a.call(responseHeaders)) != null ? _b : responseHeaders.get(\"set-cookie\")) != null ? _c : [];\n    const cookieStrings = Array.isArray(setCookie) ? setCookie : splitCookiesString(setCookie);\n    for (const cookieString of cookieStrings) {\n      const parsed = parseSetCookie(cookieString);\n      if (parsed)\n        this._parsed.set(parsed.name, parsed);\n    }\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-get CookieStore#get} without the Promise.\n   */\n  get(...args) {\n    const key = typeof args[0] === \"string\" ? args[0] : args[0].name;\n    return this._parsed.get(key);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-getAll CookieStore#getAll} without the Promise.\n   */\n  getAll(...args) {\n    var _a;\n    const all = Array.from(this._parsed.values());\n    if (!args.length) {\n      return all;\n    }\n    const key = typeof args[0] === \"string\" ? args[0] : (_a = args[0]) == null ? void 0 : _a.name;\n    return all.filter((c) => c.name === key);\n  }\n  has(name) {\n    return this._parsed.has(name);\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-set CookieStore#set} without the Promise.\n   */\n  set(...args) {\n    const [name, value, cookie] = args.length === 1 ? [args[0].name, args[0].value, args[0]] : args;\n    const map = this._parsed;\n    map.set(name, normalizeCookie({ name, value, ...cookie }));\n    replace(map, this._headers);\n    return this;\n  }\n  /**\n   * {@link https://wicg.github.io/cookie-store/#CookieStore-delete CookieStore#delete} without the Promise.\n   */\n  delete(...args) {\n    const [name, options] = typeof args[0] === \"string\" ? [args[0]] : [args[0].name, args[0]];\n    return this.set({ ...options, name, value: \"\", expires: /* @__PURE__ */ new Date(0) });\n  }\n  [Symbol.for(\"edge-runtime.inspect.custom\")]() {\n    return `ResponseCookies ${JSON.stringify(Object.fromEntries(this._parsed))}`;\n  }\n  toString() {\n    return [...this._parsed.values()].map(stringifyCookie).join(\"; \");\n  }\n};\nfunction replace(bag, headers) {\n  headers.delete(\"set-cookie\");\n  for (const [, value] of bag) {\n    const serialized = stringifyCookie(value);\n    headers.append(\"set-cookie\", serialized);\n  }\n}\nfunction normalizeCookie(cookie = { name: \"\", value: \"\" }) {\n  if (typeof cookie.expires === \"number\") {\n    cookie.expires = new Date(cookie.expires);\n  }\n  if (cookie.maxAge) {\n    cookie.expires = new Date(Date.now() + cookie.maxAge * 1e3);\n  }\n  if (cookie.path === null || cookie.path === void 0) {\n    cookie.path = \"/\";\n  }\n  return cookie;\n}\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  RequestCookies,\n  ResponseCookies,\n  parseCookie,\n  parseSetCookie,\n  stringifyCookie\n});\n", "export {\n  RequestCookies,\n  ResponseCookies,\n  stringifyCookie,\n} from 'next/dist/compiled/@edge-runtime/cookies'\n", "import type { AsyncLocalStorage } from 'async_hooks'\n\nconst sharedAsyncLocalStorageNotAvailableError = new Error(\n  'Invariant: AsyncLocalStorage accessed in runtime where it is not available'\n)\n\nclass FakeAsyncLocalStorage<Store extends {}>\n  implements AsyncLocalStorage<Store>\n{\n  disable(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  getStore(): Store | undefined {\n    // This fake implementation of AsyncLocalStorage always returns `undefined`.\n    return undefined\n  }\n\n  run<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  exit<R>(): R {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  enterWith(): void {\n    throw sharedAsyncLocalStorageNotAvailableError\n  }\n\n  static bind<T>(fn: T): T {\n    return fn\n  }\n}\n\nconst maybeGlobalAsyncLocalStorage =\n  typeof globalThis !== 'undefined' && (globalThis as any).AsyncLocalStorage\n\nexport function createAsyncLocalStorage<\n  Store extends {},\n>(): AsyncLocalStorage<Store> {\n  if (maybeGlobalAsyncLocalStorage) {\n    return new maybeGlobalAsyncLocalStorage()\n  }\n  return new FakeAsyncLocalStorage()\n}\n\nexport function bindSnapshot<T>(fn: T): T {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.bind(fn)\n  }\n  return FakeAsyncLocalStorage.bind(fn)\n}\n\nexport function createSnapshot(): <R, TArgs extends any[]>(\n  fn: (...args: TArgs) => R,\n  ...args: TArgs\n) => R {\n  if (maybeGlobalAsyncLocalStorage) {\n    return maybeGlobalAsyncLocalStorage.snapshot()\n  }\n  return function (fn: any, ...args: any[]) {\n    return fn(...args)\n  }\n}\n", "import type { WorkAsyncStorage } from './work-async-storage.external'\nimport { createAsyncLocalStorage } from './async-local-storage'\n\nexport const workAsyncStorageInstance: WorkAsyncStorage =\n  createAsyncLocalStorage()\n", "import type { AsyncLocalStorage } from 'async_hooks'\nimport type { IncrementalCache } from '../lib/incremental-cache'\nimport type { DynamicServerError } from '../../client/components/hooks-server-context'\nimport type { FetchMetrics } from '../base-http'\nimport type { FallbackRouteParams } from '../request/fallback-params'\nimport type { DeepReadonly } from '../../shared/lib/deep-readonly'\nimport type { AppSegmentConfig } from '../../build/segment-config/app/app-segment-config'\nimport type { AfterContext } from '../after/after-context'\nimport type { CacheLife } from '../use-cache/cache-life'\n\n// Share the instance module in the next-shared layer\nimport { workAsyncStorageInstance } from './work-async-storage-instance' with { 'turbopack-transition': 'next-shared' }\n\nexport interface WorkStore {\n  readonly isStaticGeneration: boolean\n\n  /**\n   * The page that is being rendered. This relates to the path to the page file.\n   */\n  readonly page: string\n\n  /**\n   * The route that is being rendered. This is the page property without the\n   * trailing `/page` or `/route` suffix.\n   */\n  readonly route: string\n\n  /**\n   * The set of unknown route parameters. Accessing these will be tracked as\n   * a dynamic access.\n   */\n  readonly fallbackRouteParams: FallbackRouteParams | null\n\n  readonly incrementalCache?: IncrementalCache\n  readonly cacheLifeProfiles?: { [profile: string]: CacheLife }\n\n  readonly isOnDemandRevalidate?: boolean\n  readonly isPrerendering?: boolean\n  readonly isRevalidate?: boolean\n\n  forceDynamic?: boolean\n  fetchCache?: AppSegmentConfig['fetchCache']\n\n  forceStatic?: boolean\n  dynamicShouldError?: boolean\n  pendingRevalidates?: Record<string, Promise<any>>\n  pendingRevalidateWrites?: Array<Promise<void>> // This is like pendingRevalidates but isn't used for deduping.\n  readonly afterContext: AfterContext\n\n  dynamicUsageDescription?: string\n  dynamicUsageStack?: string\n  dynamicUsageErr?: DynamicServerError\n\n  nextFetchId?: number\n  pathWasRevalidated?: boolean\n\n  revalidatedTags?: string[]\n  fetchMetrics?: FetchMetrics\n\n  isDraftMode?: boolean\n  isUnstableNoStore?: boolean\n  isPrefetchRequest?: boolean\n\n  requestEndedState?: { ended?: boolean }\n\n  buildId: string\n\n  readonly reactLoadableManifest?: DeepReadonly<\n    Record<string, { files: string[] }>\n  >\n  readonly assetPrefix?: string\n}\n\nexport type WorkAsyncStorage = AsyncLocalStorage<WorkStore>\n\nexport { workAsyncStorageInstance as workAsyncStorage }\n", "import { createAsyncLocalStorage } from './async-local-storage'\nimport type { WorkUnitAsyncStorage } from './work-unit-async-storage.external'\n\nexport const workUnitAsyncStorageInstance: WorkUnitAsyncStorage =\n  createAsyncLocalStorage()\n", "import type { AsyncLocalStorage } from 'async_hooks'\nimport type { DraftModeProvider } from '../async-storage/draft-mode-provider'\nimport type { ResponseCookies } from '../web/spec-extension/cookies'\nimport type { ReadonlyHeaders } from '../web/spec-extension/adapters/headers'\nimport type { ReadonlyRequestCookies } from '../web/spec-extension/adapters/request-cookies'\nimport type { CacheSignal } from './cache-signal'\nimport type { DynamicTrackingState } from './dynamic-rendering'\n\n// Share the instance module in the next-shared layer\nimport { workUnitAsyncStorageInstance } from './work-unit-async-storage-instance' with { 'turbopack-transition': 'next-shared' }\nimport type { ServerComponentsHmrCache } from '../response-cache'\nimport type {\n  RenderResumeDataCache,\n  PrerenderResumeDataCache,\n} from '../resume-data-cache/resume-data-cache'\n\ntype WorkUnitPhase = 'action' | 'render' | 'after'\n\ntype PhasePartial = {\n  /** NOTE: Will be mutated as phases change */\n  phase: WorkUnitPhase\n}\n\nexport type RequestStore = {\n  type: 'request'\n\n  /**\n   * The URL of the request. This only specifies the pathname and the search\n   * part of the URL.\n   */\n  readonly url: {\n    /**\n     * The pathname of the requested URL.\n     */\n    readonly pathname: string\n\n    /**\n     * The search part of the requested URL. If the request did not provide a\n     * search part, this will be an empty string.\n     */\n    readonly search: string\n  }\n\n  readonly headers: ReadonlyHeaders\n  // This is mutable because we need to reassign it when transitioning from the action phase to the render phase.\n  // The cookie object itself is deliberately read only and thus can't be updated.\n  cookies: ReadonlyRequestCookies\n  readonly mutableCookies: ResponseCookies\n  readonly userspaceMutableCookies: ResponseCookies\n  readonly draftMode: DraftModeProvider\n  readonly isHmrRefresh?: boolean\n  readonly serverComponentsHmrCache?: ServerComponentsHmrCache\n\n  readonly implicitTags: string[]\n\n  /**\n   * The resume data cache for this request. This will be a immutable cache.\n   */\n  renderResumeDataCache: RenderResumeDataCache | null\n\n  // DEV-only\n  usedDynamic?: boolean\n  prerenderPhase?: boolean\n} & PhasePartial\n\n/**\n * The Prerender store is for tracking information related to prerenders.\n *\n * It can be used for both RSC and SSR prerendering and should be scoped as close\n * to the individual `renderTo...` API call as possible. To keep the type simple\n * we don't distinguish between RSC and SSR prerendering explicitly but instead\n * use conditional object properties to infer which mode we are in. For instance cache tracking\n * only needs to happen during the RSC prerender when we are prospectively prerendering\n * to fill all caches.\n */\nexport type PrerenderStoreModern = {\n  type: 'prerender'\n  readonly implicitTags: string[]\n\n  /**\n   * This signal is aborted when the React render is complete. (i.e. it is the same signal passed to react)\n   */\n  readonly renderSignal: AbortSignal\n  /**\n   * This is the AbortController which represents the boundary between Prerender and dynamic. In some renders it is\n   * the same as the controller for the renderSignal but in others it is a separate controller. It should be aborted\n   * whenever the we are no longer in the prerender phase of rendering. Typically this is after one task or when you call\n   * a sync API which requires the prerender to end immediately\n   */\n  readonly controller: AbortController\n\n  /**\n   * when not null this signal is used to track cache reads during prerendering and\n   * to await all cache reads completing before aborting the prerender.\n   */\n  readonly cacheSignal: null | CacheSignal\n\n  /**\n   * During some prerenders we want to track dynamic access.\n   */\n  readonly dynamicTracking: null | DynamicTrackingState\n\n  // Collected revalidate times and tags for this document during the prerender.\n  revalidate: number // in seconds. 0 means dynamic. INFINITE_CACHE and higher means never revalidate.\n  expire: number // server expiration time\n  stale: number // client expiration time\n  tags: null | string[]\n\n  /**\n   * The resume data cache for this prerender.\n   */\n  prerenderResumeDataCache: PrerenderResumeDataCache | null\n\n  // DEV ONLY\n  // When used this flag informs certain APIs to skip logging because we're\n  // not part of the primary render path and are just prerendering to produce\n  // validation results\n  validating?: boolean\n} & PhasePartial\n\nexport type PrerenderStorePPR = {\n  type: 'prerender-ppr'\n  readonly implicitTags: string[]\n  readonly dynamicTracking: null | DynamicTrackingState\n  // Collected revalidate times and tags for this document during the prerender.\n  revalidate: number // in seconds. 0 means dynamic. INFINITE_CACHE and higher means never revalidate.\n  expire: number // server expiration time\n  stale: number // client expiration time\n  tags: null | string[]\n\n  /**\n   * The resume data cache for this prerender.\n   */\n  prerenderResumeDataCache: PrerenderResumeDataCache\n} & PhasePartial\n\nexport type PrerenderStoreLegacy = {\n  type: 'prerender-legacy'\n  readonly implicitTags: string[]\n  // Collected revalidate times and tags for this document during the prerender.\n  revalidate: number // in seconds. 0 means dynamic. INFINITE_CACHE and higher means never revalidate.\n  expire: number // server expiration time\n  stale: number // client expiration time\n  tags: null | string[]\n} & PhasePartial\n\nexport type PrerenderStore =\n  | PrerenderStoreLegacy\n  | PrerenderStorePPR\n  | PrerenderStoreModern\n\nexport type UseCacheStore = {\n  type: 'cache'\n  readonly implicitTags: string[]\n  // Collected revalidate times and tags for this cache entry during the cache render.\n  revalidate: number // implicit revalidate time from inner caches / fetches\n  expire: number // server expiration time\n  stale: number // client expiration time\n  explicitRevalidate: undefined | number // explicit revalidate time from cacheLife() calls\n  explicitExpire: undefined | number // server expiration time\n  explicitStale: undefined | number // client expiration time\n  tags: null | string[]\n} & PhasePartial\n\nexport type UnstableCacheStore = {\n  type: 'unstable-cache'\n} & PhasePartial\n\n/**\n * The Cache store is for tracking information inside a \"use cache\" or unstable_cache context.\n * Inside this context we should never expose any request or page specific information.\n */\nexport type CacheStore = UseCacheStore | UnstableCacheStore\n\nexport type WorkUnitStore = RequestStore | CacheStore | PrerenderStore\n\nexport type WorkUnitAsyncStorage = AsyncLocalStorage<WorkUnitStore>\n\nexport { workUnitAsyncStorageInstance as workUnitAsyncStorage }\n\nexport function getExpectedRequestStore(\n  callingExpression: string\n): RequestStore {\n  const workUnitStore = workUnitAsyncStorageInstance.getStore()\n  if (workUnitStore) {\n    if (workUnitStore.type === 'request') {\n      return workUnitStore\n    }\n    if (\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-ppr' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      // This should not happen because we should have checked it already.\n      throw new Error(\n        `\\`${callingExpression}\\` cannot be called inside a prerender. This is a bug in Next.js.`\n      )\n    }\n    if (workUnitStore.type === 'cache') {\n      throw new Error(\n        `\\`${callingExpression}\\` cannot be called inside \"use cache\". Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/messages/next-request-in-use-cache`\n      )\n    } else if (workUnitStore.type === 'unstable-cache') {\n      throw new Error(\n        `\\`${callingExpression}\\` cannot be called inside unstable_cache. Call it outside and pass an argument instead. Read more: https://nextjs.org/docs/app/api-reference/functions/unstable_cache`\n      )\n    }\n  }\n  throw new Error(\n    `\\`${callingExpression}\\` was called outside a request scope. Read more: https://nextjs.org/docs/messages/next-dynamic-api-wrong-context`\n  )\n}\n\nexport function getPrerenderResumeDataCache(\n  workUnitStore: WorkUnitStore\n): PrerenderResumeDataCache | null {\n  if (\n    workUnitStore.type === 'prerender' ||\n    workUnitStore.type === 'prerender-ppr'\n  ) {\n    return workUnitStore.prerenderResumeDataCache\n  }\n\n  return null\n}\n\nexport function getRenderResumeDataCache(\n  workUnitStore: WorkUnitStore\n): RenderResumeDataCache | null {\n  if (\n    workUnitStore.type !== 'prerender-legacy' &&\n    workUnitStore.type !== 'cache' &&\n    workUnitStore.type !== 'unstable-cache'\n  ) {\n    if (workUnitStore.type === 'request') {\n      return workUnitStore.renderResumeDataCache\n    }\n\n    // We return the mutable resume data cache here as an immutable version of\n    // the cache as it can also be used for reading.\n    return workUnitStore.prerenderResumeDataCache\n  }\n\n  return null\n}\n", "const DYNAMIC_ERROR_CODE = 'DYNAMIC_SERVER_USAGE'\n\nexport class DynamicServerError extends Error {\n  digest: typeof DYNAMIC_ERROR_CODE = DYNAMIC_ERROR_CODE\n\n  constructor(public readonly description: string) {\n    super(`Dynamic server usage: ${description}`)\n  }\n}\n\nexport function isDynamicServerError(err: unknown): err is DynamicServerError {\n  if (\n    typeof err !== 'object' ||\n    err === null ||\n    !('digest' in err) ||\n    typeof err.digest !== 'string'\n  ) {\n    return false\n  }\n\n  return err.digest === DYNAMIC_ERROR_CODE\n}\n", "const NEXT_STATIC_GEN_BAILOUT = 'NEXT_STATIC_GEN_BAILOUT'\n\nexport class StaticGenBailoutError extends Error {\n  public readonly code = NEXT_STATIC_GEN_BAILOUT\n}\n\nexport function isStaticGenBailoutError(\n  error: unknown\n): error is StaticGenBailoutError {\n  if (typeof error !== 'object' || error === null || !('code' in error)) {\n    return false\n  }\n\n  return error.code === NEXT_STATIC_GEN_BAILOUT\n}\n", "/**\n * This function constructs a promise that will never resolve. This is primarily\n * useful for dynamicIO where we use promise resolution timing to determine which\n * parts of a render can be included in a prerender.\n *\n * @internal\n */\nexport function makeHangingPromise<T>(\n  signal: AbortSignal,\n  expression: string\n): Promise<T> {\n  const hangingPromise = new Promise<T>((_, reject) => {\n    signal.addEventListener(\n      'abort',\n      () => {\n        reject(\n          new Error(\n            `During prerendering, ${expression} rejects when the prerender is complete. Typically these errors are handled by React but if you move ${expression} to a different context by using \\`setTimeout\\`, \\`after\\`, or similar functions you may observe this error and you should handle it in that context.`\n          )\n        )\n      },\n      { once: true }\n    )\n  })\n  // We are fine if no one actually awaits this promise. We shouldn't consider this an unhandled rejection so\n  // we attach a noop catch handler here to suppress this warning. If you actually await somewhere or construct\n  // your own promise out of it you'll need to ensure you handle the error when it rejects.\n  hangingPromise.catch(ignoreReject)\n  return hangingPromise\n}\n\nfunction ignoreReject() {}\n", "export const METADATA_BOUNDARY_NAME = '__next_metadata_boundary__'\nexport const VIEWPORT_BOUNDARY_NAME = '__next_viewport_boundary__'\nexport const OUTLET_BOUNDARY_NAME = '__next_outlet_boundary__'\n", "/**\n * The functions provided by this module are used to communicate certain properties\n * about the currently running code so that Next.js can make decisions on how to handle\n * the current execution in different rendering modes such as pre-rendering, resuming, and SSR.\n *\n * Today Next.js treats all code as potentially static. Certain APIs may only make sense when dynamically rendering.\n * Traditionally this meant deopting the entire render to dynamic however with PPR we can now deopt parts\n * of a React tree as dynamic while still keeping other parts static. There are really two different kinds of\n * Dynamic indications.\n *\n * The first is simply an intention to be dynamic. unstable_noStore is an example of this where\n * the currently executing code simply declares that the current scope is dynamic but if you use it\n * inside unstable_cache it can still be cached. This type of indication can be removed if we ever\n * make the default dynamic to begin with because the only way you would ever be static is inside\n * a cache scope which this indication does not affect.\n *\n * The second is an indication that a dynamic data source was read. This is a stronger form of dynamic\n * because it means that it is inappropriate to cache this at all. using a dynamic data source inside\n * unstable_cache should error. If you want to use some dynamic data inside unstable_cache you should\n * read that data outside the cache and pass it in as an argument to the cached function.\n */\n\nimport type { WorkStore } from '../app-render/work-async-storage.external'\nimport type {\n  WorkUnitStore,\n  RequestStore,\n  PrerenderStoreLegacy,\n  PrerenderStoreModern,\n} from '../app-render/work-unit-async-storage.external'\n\n// Once postpone is in stable we should switch to importing the postpone export directly\nimport React from 'react'\n\nimport { DynamicServerError } from '../../client/components/hooks-server-context'\nimport { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { workUnitAsyncStorage } from './work-unit-async-storage.external'\nimport { workAsyncStorage } from '../app-render/work-async-storage.external'\nimport { makeHangingPromise } from '../dynamic-rendering-utils'\nimport {\n  METADATA_BOUNDARY_NAME,\n  VIEWPORT_BOUNDARY_NAME,\n  OUTLET_BOUNDARY_NAME,\n} from '../../lib/metadata/metadata-constants'\n\nconst hasPostpone = typeof React.unstable_postpone === 'function'\n\nexport type DynamicAccess = {\n  /**\n   * If debugging, this will contain the stack trace of where the dynamic access\n   * occurred. This is used to provide more information to the user about why\n   * their page is being rendered dynamically.\n   */\n  stack?: string\n\n  /**\n   * The expression that was accessed dynamically.\n   */\n  expression: string\n}\n\n// Stores dynamic reasons used during an RSC render.\nexport type DynamicTrackingState = {\n  /**\n   * When true, stack information will also be tracked during dynamic access.\n   */\n  readonly isDebugDynamicAccesses: boolean | undefined\n\n  /**\n   * The dynamic accesses that occurred during the render.\n   */\n  readonly dynamicAccesses: Array<DynamicAccess>\n\n  syncDynamicExpression: undefined | string\n  syncDynamicErrorWithStack: null | Error\n  // Dev only\n  syncDynamicLogged?: boolean\n}\n\n// Stores dynamic reasons used during an SSR render.\nexport type DynamicValidationState = {\n  hasSuspendedDynamic: boolean\n  hasDynamicMetadata: boolean\n  hasDynamicViewport: boolean\n  hasSyncDynamicErrors: boolean\n  dynamicErrors: Array<Error>\n}\n\nexport function createDynamicTrackingState(\n  isDebugDynamicAccesses: boolean | undefined\n): DynamicTrackingState {\n  return {\n    isDebugDynamicAccesses,\n    dynamicAccesses: [],\n    syncDynamicExpression: undefined,\n    syncDynamicErrorWithStack: null,\n  }\n}\n\nexport function createDynamicValidationState(): DynamicValidationState {\n  return {\n    hasSuspendedDynamic: false,\n    hasDynamicMetadata: false,\n    hasDynamicViewport: false,\n    hasSyncDynamicErrors: false,\n    dynamicErrors: [],\n  }\n}\n\nexport function getFirstDynamicReason(\n  trackingState: DynamicTrackingState\n): undefined | string {\n  return trackingState.dynamicAccesses[0]?.expression\n}\n\n/**\n * This function communicates that the current scope should be treated as dynamic.\n *\n * In most cases this function is a no-op but if called during\n * a PPR prerender it will postpone the current sub-tree and calling\n * it during a normal prerender will cause the entire prerender to abort\n */\nexport function markCurrentScopeAsDynamic(\n  store: WorkStore,\n  workUnitStore: undefined | Exclude<WorkUnitStore, PrerenderStoreModern>,\n  expression: string\n): void {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n  }\n\n  // If we're forcing dynamic rendering or we're forcing static rendering, we\n  // don't need to do anything here because the entire page is already dynamic\n  // or it's static and it should not throw or postpone here.\n  if (store.forceDynamic || store.forceStatic) return\n\n  if (store.dynamicShouldError) {\n    throw new StaticGenBailoutError(\n      `Route ${store.route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n    )\n  }\n\n  if (workUnitStore) {\n    if (workUnitStore.type === 'prerender-ppr') {\n      postponeWithTracking(\n        store.route,\n        expression,\n        workUnitStore.dynamicTracking\n      )\n    } else if (workUnitStore.type === 'prerender-legacy') {\n      workUnitStore.revalidate = 0\n\n      // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n      const err = new DynamicServerError(\n        `Route ${store.route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n      )\n      store.dynamicUsageDescription = expression\n      store.dynamicUsageStack = err.stack\n\n      throw err\n    } else if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n/**\n * This function communicates that some dynamic path parameter was read. This\n * differs from the more general `trackDynamicDataAccessed` in that it is will\n * not error when `dynamic = \"error\"` is set.\n *\n * @param store The static generation store\n * @param expression The expression that was accessed dynamically\n */\nexport function trackFallbackParamAccessed(\n  store: WorkStore,\n  expression: string\n): void {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  if (!prerenderStore || prerenderStore.type !== 'prerender-ppr') return\n\n  postponeWithTracking(store.route, expression, prerenderStore.dynamicTracking)\n}\n\n/**\n * This function is meant to be used when prerendering without dynamicIO or PPR.\n * When called during a build it will cause Next.js to consider the route as dynamic.\n *\n * @internal\n */\nexport function throwToInterruptStaticGeneration(\n  expression: string,\n  store: WorkStore,\n  prerenderStore: PrerenderStoreLegacy\n): never {\n  // We aren't prerendering but we are generating a static page. We need to bail out of static generation\n  const err = new DynamicServerError(\n    `Route ${store.route} couldn't be rendered statically because it used \\`${expression}\\`. See more info here: https://nextjs.org/docs/messages/dynamic-server-error`\n  )\n\n  prerenderStore.revalidate = 0\n\n  store.dynamicUsageDescription = expression\n  store.dynamicUsageStack = err.stack\n\n  throw err\n}\n\n/**\n * This function should be used to track whether something dynamic happened even when\n * we are in a dynamic render. This is useful for Dev where all renders are dynamic but\n * we still track whether dynamic APIs were accessed for helpful messaging\n *\n * @internal\n */\nexport function trackDynamicDataInDynamicRender(\n  _store: WorkStore,\n  workUnitStore: void | WorkUnitStore\n) {\n  if (workUnitStore) {\n    if (\n      workUnitStore.type === 'cache' ||\n      workUnitStore.type === 'unstable-cache'\n    ) {\n      // inside cache scopes marking a scope as dynamic has no effect because the outer cache scope\n      // creates a cache boundary. This is subtly different from reading a dynamic data source which is\n      // forbidden inside a cache scope.\n      return\n    }\n    if (\n      workUnitStore.type === 'prerender' ||\n      workUnitStore.type === 'prerender-legacy'\n    ) {\n      workUnitStore.revalidate = 0\n    }\n    if (\n      process.env.NODE_ENV === 'development' &&\n      workUnitStore.type === 'request'\n    ) {\n      workUnitStore.usedDynamic = true\n    }\n  }\n}\n\n// Despite it's name we don't actually abort unless we have a controller to call abort on\n// There are times when we let a prerender run long to discover caches where we want the semantics\n// of tracking dynamic access without terminating the prerender early\nfunction abortOnSynchronousDynamicDataAccess(\n  route: string,\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const reason = `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n\n  const error = createPrerenderInterruptedError(reason)\n\n  prerenderStore.controller.abort(error)\n\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function abortOnSynchronousPlatformIOAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): void {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicExpression = expression\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n    }\n  }\n  return abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n}\n\nexport function trackSynchronousPlatformIOAccessInDev(\n  requestStore: RequestStore\n): void {\n  // We don't actually have a controller to abort but we do the semantic equivalent by\n  // advancing the request store out of prerender mode\n  requestStore.prerenderPhase = false\n}\n\n/**\n * use this function when prerendering with dynamicIO. If we are doing a\n * prospective prerender we don't actually abort because we want to discover\n * all caches for the shell. If this is the actual prerender we do abort.\n *\n * This function accepts a prerenderStore but the caller should ensure we're\n * actually running in dynamicIO mode.\n *\n * @internal\n */\nexport function abortAndThrowOnSynchronousRequestDataAccess(\n  route: string,\n  expression: string,\n  errorWithStack: Error,\n  prerenderStore: PrerenderStoreModern\n): never {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    if (dynamicTracking.syncDynamicErrorWithStack === null) {\n      dynamicTracking.syncDynamicExpression = expression\n      dynamicTracking.syncDynamicErrorWithStack = errorWithStack\n      if (prerenderStore.validating === true) {\n        // We always log Request Access in dev at the point of calling the function\n        // So we mark the dynamic validation as not requiring it to be printed\n        dynamicTracking.syncDynamicLogged = true\n      }\n    }\n  }\n  abortOnSynchronousDynamicDataAccess(route, expression, prerenderStore)\n  throw createPrerenderInterruptedError(\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}.`\n  )\n}\n\n// For now these implementations are the same so we just reexport\nexport const trackSynchronousRequestDataAccessInDev =\n  trackSynchronousPlatformIOAccessInDev\n\n/**\n * This component will call `React.postpone` that throws the postponed error.\n */\ntype PostponeProps = {\n  reason: string\n  route: string\n}\nexport function Postpone({ reason, route }: PostponeProps): never {\n  const prerenderStore = workUnitAsyncStorage.getStore()\n  const dynamicTracking =\n    prerenderStore && prerenderStore.type === 'prerender-ppr'\n      ? prerenderStore.dynamicTracking\n      : null\n  postponeWithTracking(route, reason, dynamicTracking)\n}\n\nexport function postponeWithTracking(\n  route: string,\n  expression: string,\n  dynamicTracking: null | DynamicTrackingState\n): never {\n  assertPostpone()\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      // When we aren't debugging, we don't need to create another error for the\n      // stack trace.\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n\n  React.unstable_postpone(createPostponeReason(route, expression))\n}\n\nfunction createPostponeReason(route: string, expression: string) {\n  return (\n    `Route ${route} needs to bail out of prerendering at this point because it used ${expression}. ` +\n    `React throws this special object to indicate where. It should not be caught by ` +\n    `your own try/catch. Learn more: https://nextjs.org/docs/messages/ppr-caught-error`\n  )\n}\n\nexport function isDynamicPostpone(err: unknown) {\n  if (\n    typeof err === 'object' &&\n    err !== null &&\n    typeof (err as any).message === 'string'\n  ) {\n    return isDynamicPostponeReason((err as any).message)\n  }\n  return false\n}\n\nfunction isDynamicPostponeReason(reason: string) {\n  return (\n    reason.includes(\n      'needs to bail out of prerendering at this point because it used'\n    ) &&\n    reason.includes(\n      'Learn more: https://nextjs.org/docs/messages/ppr-caught-error'\n    )\n  )\n}\n\nif (isDynamicPostponeReason(createPostponeReason('%%%', '^^^')) === false) {\n  throw new Error(\n    'Invariant: isDynamicPostpone misidentified a postpone reason. This is a bug in Next.js'\n  )\n}\n\nconst NEXT_PRERENDER_INTERRUPTED = 'NEXT_PRERENDER_INTERRUPTED'\n\nfunction createPrerenderInterruptedError(message: string): Error {\n  const error = new Error(message)\n  ;(error as any).digest = NEXT_PRERENDER_INTERRUPTED\n  return error\n}\n\ntype DigestError = Error & {\n  digest: string\n}\n\nexport function isPrerenderInterruptedError(\n  error: unknown\n): error is DigestError {\n  return (\n    typeof error === 'object' &&\n    error !== null &&\n    (error as any).digest === NEXT_PRERENDER_INTERRUPTED &&\n    'name' in error &&\n    'message' in error &&\n    error instanceof Error\n  )\n}\n\nexport function accessedDynamicData(\n  dynamicAccesses: Array<DynamicAccess>\n): boolean {\n  return dynamicAccesses.length > 0\n}\n\nexport function consumeDynamicAccess(\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): DynamicTrackingState['dynamicAccesses'] {\n  // We mutate because we only call this once we are no longer writing\n  // to the dynamicTrackingState and it's more efficient than creating a new\n  // array.\n  serverDynamic.dynamicAccesses.push(...clientDynamic.dynamicAccesses)\n  return serverDynamic.dynamicAccesses\n}\n\nexport function formatDynamicAPIAccesses(\n  dynamicAccesses: Array<DynamicAccess>\n): string[] {\n  return dynamicAccesses\n    .filter(\n      (access): access is Required<DynamicAccess> =>\n        typeof access.stack === 'string' && access.stack.length > 0\n    )\n    .map(({ expression, stack }) => {\n      stack = stack\n        .split('\\n')\n        // Remove the \"Error: \" prefix from the first line of the stack trace as\n        // well as the first 4 lines of the stack trace which is the distance\n        // from the user code and the `new Error().stack` call.\n        .slice(4)\n        .filter((line) => {\n          // Exclude Next.js internals from the stack trace.\n          if (line.includes('node_modules/next/')) {\n            return false\n          }\n\n          // Exclude anonymous functions from the stack trace.\n          if (line.includes(' (<anonymous>)')) {\n            return false\n          }\n\n          // Exclude Node.js internals from the stack trace.\n          if (line.includes(' (node:')) {\n            return false\n          }\n\n          return true\n        })\n        .join('\\n')\n      return `Dynamic API Usage Debug - ${expression}:\\n${stack}`\n    })\n}\n\nfunction assertPostpone() {\n  if (!hasPostpone) {\n    throw new Error(\n      `Invariant: React.unstable_postpone is not defined. This suggests the wrong version of React was loaded. This is a bug in Next.js`\n    )\n  }\n}\n\n/**\n * This is a bit of a hack to allow us to abort a render using a Postpone instance instead of an Error which changes React's\n * abort semantics slightly.\n */\nexport function createPostponedAbortSignal(reason: string): AbortSignal {\n  assertPostpone()\n  const controller = new AbortController()\n  // We get our hands on a postpone instance by calling postpone and catching the throw\n  try {\n    React.unstable_postpone(reason)\n  } catch (x: unknown) {\n    controller.abort(x)\n  }\n  return controller.signal\n}\n\nexport function annotateDynamicAccess(\n  expression: string,\n  prerenderStore: PrerenderStoreModern\n) {\n  const dynamicTracking = prerenderStore.dynamicTracking\n  if (dynamicTracking) {\n    dynamicTracking.dynamicAccesses.push({\n      stack: dynamicTracking.isDebugDynamicAccesses\n        ? new Error().stack\n        : undefined,\n      expression,\n    })\n  }\n}\n\nexport function useDynamicRouteParams(expression: string) {\n  if (typeof window === 'undefined') {\n    const workStore = workAsyncStorage.getStore()\n\n    if (\n      workStore &&\n      workStore.isStaticGeneration &&\n      workStore.fallbackRouteParams &&\n      workStore.fallbackRouteParams.size > 0\n    ) {\n      // There are fallback route params, we should track these as dynamic\n      // accesses.\n      const workUnitStore = workUnitAsyncStorage.getStore()\n      if (workUnitStore) {\n        // We're prerendering with dynamicIO or PPR or both\n        if (workUnitStore.type === 'prerender') {\n          // We are in a prerender with dynamicIO semantics\n          // We are going to hang here and never resolve. This will cause the currently\n          // rendering component to effectively be a dynamic hole\n          React.use(makeHangingPromise(workUnitStore.renderSignal, expression))\n        } else if (workUnitStore.type === 'prerender-ppr') {\n          // We're prerendering with PPR\n          postponeWithTracking(\n            workStore.route,\n            expression,\n            workUnitStore.dynamicTracking\n          )\n        } else if (workUnitStore.type === 'prerender-legacy') {\n          throwToInterruptStaticGeneration(expression, workStore, workUnitStore)\n        }\n      }\n    }\n  }\n}\n\nconst hasSuspenseRegex = /\\n\\s+at Suspense \\(<anonymous>\\)/\nconst hasMetadataRegex = new RegExp(\n  `\\\\n\\\\s+at ${METADATA_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasViewportRegex = new RegExp(\n  `\\\\n\\\\s+at ${VIEWPORT_BOUNDARY_NAME}[\\\\n\\\\s]`\n)\nconst hasOutletRegex = new RegExp(`\\\\n\\\\s+at ${OUTLET_BOUNDARY_NAME}[\\\\n\\\\s]`)\n\nexport function trackAllowedDynamicAccess(\n  route: string,\n  componentStack: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n) {\n  if (hasOutletRegex.test(componentStack)) {\n    // We don't need to track that this is dynamic. It is only so when something else is also dynamic.\n    return\n  } else if (hasMetadataRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicMetadata = true\n    return\n  } else if (hasViewportRegex.test(componentStack)) {\n    dynamicValidation.hasDynamicViewport = true\n    return\n  } else if (hasSuspenseRegex.test(componentStack)) {\n    dynamicValidation.hasSuspendedDynamic = true\n    return\n  } else if (\n    serverDynamic.syncDynamicErrorWithStack ||\n    clientDynamic.syncDynamicErrorWithStack\n  ) {\n    dynamicValidation.hasSyncDynamicErrors = true\n    return\n  } else {\n    const message = `Route \"${route}\": A component accessed data, headers, params, searchParams, or a short-lived cache without a Suspense boundary nor a \"use cache\" above it. We don't have the exact line number added to error messages yet but you can see which component in the stack below. See more info: https://nextjs.org/docs/messages/next-prerender-missing-suspense`\n    const error = createErrorWithComponentStack(message, componentStack)\n    dynamicValidation.dynamicErrors.push(error)\n    return\n  }\n}\n\nfunction createErrorWithComponentStack(\n  message: string,\n  componentStack: string\n) {\n  const error = new Error(message)\n  error.stack = 'Error: ' + message + componentStack\n  return error\n}\n\nexport function throwIfDisallowedDynamic(\n  route: string,\n  dynamicValidation: DynamicValidationState,\n  serverDynamic: DynamicTrackingState,\n  clientDynamic: DynamicTrackingState\n): void {\n  let syncError: null | Error\n  let syncExpression: undefined | string\n  let syncLogged: boolean\n  if (serverDynamic.syncDynamicErrorWithStack) {\n    syncError = serverDynamic.syncDynamicErrorWithStack\n    syncExpression = serverDynamic.syncDynamicExpression!\n    syncLogged = serverDynamic.syncDynamicLogged === true\n  } else if (clientDynamic.syncDynamicErrorWithStack) {\n    syncError = clientDynamic.syncDynamicErrorWithStack\n    syncExpression = clientDynamic.syncDynamicExpression!\n    syncLogged = clientDynamic.syncDynamicLogged === true\n  } else {\n    syncError = null\n    syncExpression = undefined\n    syncLogged = false\n  }\n\n  if (dynamicValidation.hasSyncDynamicErrors && syncError) {\n    if (!syncLogged) {\n      // In dev we already log errors about sync dynamic access. But during builds we need to ensure\n      // the offending sync error is logged before we exit the build\n      console.error(syncError)\n    }\n    // The actual error should have been logged when the sync access ocurred\n    throw new StaticGenBailoutError()\n  }\n\n  const dynamicErrors = dynamicValidation.dynamicErrors\n  if (dynamicErrors.length) {\n    for (let i = 0; i < dynamicErrors.length; i++) {\n      console.error(dynamicErrors[i])\n    }\n\n    throw new StaticGenBailoutError()\n  }\n\n  if (!dynamicValidation.hasSuspendedDynamic) {\n    if (dynamicValidation.hasDynamicMetadata) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateMetadata\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateMetadata\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateMetadata\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    } else if (dynamicValidation.hasDynamicViewport) {\n      if (syncError) {\n        console.error(syncError)\n        throw new StaticGenBailoutError(\n          `Route \"${route}\" has a \\`generateViewport\\` that could not finish rendering before ${syncExpression} was used. Follow the instructions in the error for this expression to resolve.`\n        )\n      }\n      throw new StaticGenBailoutError(\n        `Route \"${route}\" has a \\`generateViewport\\` that depends on Request data (\\`cookies()\\`, etc...) or external data (\\`fetch(...)\\`, etc...) but the rest of the route was static or only used cached data (\\`\"use cache\"\\`). If you expected this route to be prerenderable update your \\`generateViewport\\` to not use Request data and only use cached external data. Otherwise, add \\`await connection()\\` somewhere within this route to indicate explicitly it should not be prerendered.`\n      )\n    }\n  }\n}\n", "import type { AfterTaskAsyncStorage } from './after-task-async-storage.external'\nimport { createAsyncLocalStorage } from './async-local-storage'\n\nexport const afterTaskAsyncStorageInstance: AfterTaskAsyncStorage =\n  createAsyncLocalStorage()\n", "import type { AsyncLocalStorage } from 'async_hooks'\n\n// Share the instance module in the next-shared layer\nimport { afterTaskAsyncStorageInstance as afterTaskAsyncStorage } from './after-task-async-storage-instance' with { 'turbopack-transition': 'next-shared' }\nimport type { WorkUnitStore } from './work-unit-async-storage.external'\n\nexport interface AfterTaskStore {\n  /** The phase in which the topmost `after` was called.\n   *\n   * NOTE: Can be undefined when running `generateStaticParams`,\n   * where we only have a `workStore`, no `workUnitStore`.\n   */\n  readonly rootTaskSpawnPhase: WorkUnitStore['phase'] | undefined\n}\n\nexport type AfterTaskAsyncStorage = AsyncLocalStorage<AfterTaskStore>\n\nexport { afterTaskAsyncStorage }\n", "import { StaticGenBailoutError } from '../../client/components/static-generation-bailout'\nimport { afterTaskAsyncStorage } from '../app-render/after-task-async-storage.external'\n\n// This regex will have fast negatives meaning valid identifiers may not pass\n// this test. However this is only used during static generation to provide hints\n// about why a page bailed out of some or all prerendering and we can use bracket notation\n// for example while `ಠ_ಠ` is a valid identifier it's ok to print `searchParams['ಠ_ಠ']`\n// even if this would have been fine too `searchParams.ಠ_ಠ`\nconst isDefinitelyAValidIdentifier = /^[A-Za-z_$][A-Za-z0-9_$]*$/\n\nexport function describeStringPropertyAccess(target: string, prop: string) {\n  if (isDefinitelyAValidIdentifier.test(prop)) {\n    return `\\`${target}.${prop}\\``\n  }\n  return `\\`${target}[${JSON.stringify(prop)}]\\``\n}\n\nexport function describeHasCheckingStringProperty(\n  target: string,\n  prop: string\n) {\n  const stringifiedProp = JSON.stringify(prop)\n  return `\\`Reflect.has(${target}, ${stringifiedProp})\\`, \\`${stringifiedProp} in ${target}\\`, or similar`\n}\n\nexport function throwWithStaticGenerationBailoutError(\n  route: string,\n  expression: string\n): never {\n  throw new StaticGenBailoutError(\n    `Route ${route} couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n  )\n}\n\nexport function throwWithStaticGenerationBailoutErrorWithDynamicError(\n  route: string,\n  expression: string\n): never {\n  throw new StaticGenBailoutError(\n    `Route ${route} with \\`dynamic = \"error\"\\` couldn't be rendered statically because it used ${expression}. See more info here: https://nextjs.org/docs/app/building-your-application/rendering/static-and-dynamic#dynamic-rendering`\n  )\n}\n\nexport function isRequestAPICallableInsideAfter() {\n  const afterTaskStore = afterTaskAsyncStorage.getStore()\n  return afterTaskStore?.rootTaskSpawnPhase === 'action'\n}\n\nexport const wellKnownProperties = new Set([\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toString',\n  'valueOf',\n  'toLocaleString',\n\n  // Promise prototype\n  // fallthrough\n  'then',\n  'catch',\n  'finally',\n\n  // React Promise extension\n  // fallthrough\n  'status',\n\n  // React introspection\n  'displayName',\n\n  // Common tested properties\n  // fallthrough\n  'toJSON',\n  '$$typeof',\n  '__esModule',\n])\n", "export class ReflectAdapter {\n  static get<T extends object>(\n    target: T,\n    prop: string | symbol,\n    receiver: unknown\n  ): any {\n    const value = Reflect.get(target, prop, receiver)\n    if (typeof value === 'function') {\n      return value.bind(target)\n    }\n\n    return value\n  }\n\n  static set<T extends object>(\n    target: T,\n    prop: string | symbol,\n    value: any,\n    receiver: any\n  ): boolean {\n    return Reflect.set(target, prop, value, receiver)\n  }\n\n  static has<T extends object>(target: T, prop: string | symbol): boolean {\n    return Reflect.has(target, prop)\n  }\n\n  static deleteProperty<T extends object>(\n    target: T,\n    prop: string | symbol\n  ): boolean {\n    return Reflect.deleteProperty(target, prop)\n  }\n}\n"],
  "mappings": "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",
  "names": ["RequestCookies", "ResponseCookies", "stringifyCookie", "bindSnapshot", "createAsyncLocalStorage", "createSnapshot", "sharedAsyncLocalStorageNotAvailableError", "Error", "FakeAsyncLocalStorage", "disable", "getStore", "undefined", "run", "exit", "enterWith", "bind", "fn", "maybeGlobalAsyncLocalStorage", "globalThis", "AsyncLocalStorage", "snapshot", "args", "workAsyncStorageInstance", "createAsyncLocalStorage", "workAsyncStorage", "workAsyncStorageInstance", "workUnitAsyncStorageInstance", "createAsyncLocalStorage", "getExpectedRequestStore", "getPrerenderResumeDataCache", "getRenderResumeDataCache", "workUnitAsyncStorage", "workUnitAsyncStorageInstance", "callingExpression", "workUnitStore", "getStore", "type", "Error", "prerenderResumeDataCache", "renderResumeDataCache", "DynamicServerError", "isDynamicServerError", "DYNAMIC_ERROR_CODE", "Error", "constructor", "description", "digest", "err", "StaticGenBailoutError", "isStaticGenBailoutError", "NEXT_STATIC_GEN_BAILOUT", "Error", "code", "error", "makeHangingPromise", "signal", "expression", "hangingPromise", "Promise", "_", "reject", "addEventListener", "Error", "once", "catch", "ignoreReject", "METADATA_BOUNDARY_NAME", "OUTLET_BOUNDARY_NAME", "VIEWPORT_BOUNDARY_NAME", "Postpone", "abortAndThrowOnSynchronousRequestDataAccess", "abortOnSynchronousPlatformIOAccess", "accessedDynamicData", "annotateDynamicAccess", "consumeDynamicAccess", "createDynamicTrackingState", "createDynamicValidationState", "createPostponedAbortSignal", "formatDynamicAPIAccesses", "getFirstDynamicReason", "isDynamicPostpone", "isPrerenderInterruptedError", "markCurrentScopeAsDynamic", "postponeWithTracking", "throwIfDisallowedDynamic", "throwToInterruptStaticGeneration", "trackAllowedDynamicAccess", "trackDynamicDataInDynamicRender", "trackFallbackParamAccessed", "trackSynchronousPlatformIOAccessInDev", "trackSynchronousRequestDataAccessInDev", "useDynamicRouteParams", "hasPostpone", "React", "unstable_postpone", "isDebugDynamicAccesses", "dynamicAccesses", "syncDynamicExpression", "undefined", "syncDynamicErrorWithStack", "hasSuspendedDynamic", "hasDynamicMetadata", "hasDynamicViewport", "hasSyncDynamicErrors", "dynamicErrors", "trackingState", "expression", "store", "workUnitStore", "type", "forceDynamic", "forceStatic", "dynamicShouldError", "StaticGenBailoutError", "route", "dynamicTracking", "revalidate", "err", "DynamicServerError", "dynamicUsageDescription", "dynamicUsageStack", "stack", "usedDynamic", "prerenderStore", "workUnitAsyncStorage", "getStore", "_store", "abortOnSynchronousDynamicDataAccess", "reason", "error", "createPrerenderInterruptedError", "controller", "abort", "push", "Error", "errorWithStack", "requestStore", "prerenderPhase", "validating", "syncDynamicLogged", "assertPostpone", "createPostponeReason", "message", "isDynamicPostponeReason", "includes", "NEXT_PRERENDER_INTERRUPTED", "digest", "length", "serverDynamic", "clientDynamic", "filter", "access", "map", "split", "slice", "line", "join", "AbortController", "x", "signal", "window", "workStore", "workAsyncStorage", "isStaticGeneration", "fallbackRouteParams", "size", "use", "makeHangingPromise", "renderSignal", "hasSuspenseRegex", "hasMetadataRegex", "RegExp", "METADATA_BOUNDARY_NAME", "hasViewportRegex", "VIEWPORT_BOUNDARY_NAME", "hasOutletRegex", "OUTLET_BOUNDARY_NAME", "componentStack", "dynamicValidation", "test", "createErrorWithComponentStack", "syncError", "syncExpression", "syncLogged", "console", "i", "afterTaskAsyncStorageInstance", "createAsyncLocalStorage", "afterTaskAsyncStorage", "describeHasCheckingStringProperty", "describeStringPropertyAccess", "isRequestAPICallableInsideAfter", "throwWithStaticGenerationBailoutError", "throwWithStaticGenerationBailoutErrorWithDynamicError", "wellKnownProperties", "isDefinitelyAValidIdentifier", "target", "prop", "test", "JSON", "stringify", "stringifiedProp", "route", "expression", "StaticGenBailoutError", "afterTaskStore", "afterTaskAsyncStorage", "getStore", "rootTaskSpawnPhase", "Set", "ReflectAdapter", "get", "target", "prop", "receiver", "value", "Reflect", "bind", "set", "has", "deleteProperty"]
}
